stages:
  - build
  - lint
  - test
  - deploy
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup
  
lint:
  stage: lint
  image: node:18
  needs: []
  before_script:
    - git checkout $CI_COMMIT_BRANCH
    - git config user.name metahkg-bot
    - git config user.email bot@metahkg.org
    - git remote set-url origin https://metahkg-bot:$CI_JOB_TOKEN@gitlab.com/$CI_PROJECT_PATH
  script:
    - yarn install
    - yarn lint
    - git commit -a -m lint || exit 0
    - git push origin $CI_COMMIT_BRANCH
  rules:
    - if: $CI_COMMIT_AUTHOR != "metahkg-bot <bot@metahkg.org>"

sast:
  stage: test

docker-build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --build-arg REACT_APP_build=$CI_COMMIT_SHORT_SHA --pull -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest" .
    - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest"
    - docker build --build-arg REACT_APP_build=$CI_COMMIT_SHORT_SHA --pull -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHORT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHORT_SHA"
  rules:
    - if: "$CI_COMMIT_BRANCH"
      exists:
        - Dockerfile

include:
  - template: Auto-DevOps.gitlab-ci.yml
