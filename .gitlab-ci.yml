# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
prettify:
  image: node:latest
  script:
  - git checkout $CI_COMMIT_BRANCH
  - npx prettier --check src || npx prettier --write src
  - git config user.name wcyat-bot
  - git config user.email bot@wcyat.me
  - git commit -a -m prettify || exit 0
  - git remote set-url origin https://wcyat:$gitlab_token@gitlab.com/metahkg/metahkg-web.git
  - git push origin $CI_COMMIT_BRANCH
  rules:
  - if: $CI_COMMIT_AUTHOR != "wcyat-bot <bot@wcyat.me>"
docker-build:
  image: docker:latest
  stage: build
  services:
  - docker:dind
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  - docker build --pull -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest" .
  - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest"
  rules:
  - if: "$CI_COMMIT_BRANCH"
    exists:
    - Dockerfile
stages:
- build
- test
- deploy
- review
- dast
- staging
- canary
- production
- incremental rollout 10%
- incremental rollout 25%
- incremental rollout 50%
- incremental rollout 100%
- performance
- cleanup
sast:
  stage: test
include:
- template: Auto-DevOps.gitlab-ci.yml
